name: Deploy to VPS

on:
  push:
    branches: [ main ]

jobs:
  deploy:
    name: Build and Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build TypeScript
      run: npm run build

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and export Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        load: true
        tags: internoti:latest

    - name: Save Docker image
      run: docker save internoti:latest > internoti.tar

    - name: Copy Docker image to VPS
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        source: "internoti.tar"
        target: "/tmp"

    - name: Deploy to VPS
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.VPS_HOST }}
        username: ${{ secrets.VPS_USERNAME }}
        key: ${{ secrets.VPS_SSH_KEY }}
        script: |
          # Load the new image
          docker load < /tmp/internoti.tar
          rm /tmp/internoti.tar

          # Stop and remove existing container
          docker stop internoti || true
          docker rm internoti || true

          # Run new container with environment variables
          docker run -d \
            --name internoti \
            --restart unless-stopped \
            -e INTERCOM_ACCESS_TOKEN="${{ secrets.INTERCOM_ACCESS_TOKEN }}" \
            -e TELEGRAM_BOT_TOKEN="${{ secrets.TELEGRAM_BOT_TOKEN }}" \
            -e TELEGRAM_GROUP_ID="${{ secrets.TELEGRAM_GROUP_ID }}" \
            -e WEBHOOK_SECRET="${{ secrets.WEBHOOK_SECRET }}" \
            -e NODE_ENV="production" \
            -e LOG_LEVEL="info" \
            -p 3000:3000 \
            internoti:latest